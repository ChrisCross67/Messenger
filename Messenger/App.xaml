<Application x:Class="Messenger.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:locator="clr-namespace:Messenger.Locator"
             xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:utils="clr-namespace:Messenger.Utils"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             DispatcherUnhandledException="Application_DispatcherUnhandledException"
             ShutdownMode="OnMainWindowClose"
             StartupUri="MainWindow.xaml">

    <Application.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>

                <!--  MahApps  -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

                <!--  Material Design  -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />

                <!--  Material Design: MahApps Compatibility  -->
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.MahApps;component/Themes/MaterialDesignTheme.MahApps.Defaults.xaml "/>-->

            </ResourceDictionary.MergedDictionaries>

            <!--  MahApps Brushes  -->
            <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource Primary700}" />
            <SolidColorBrush x:Key="AccentColorBrush" Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="AccentColorBrush2" Color="{DynamicResource Primary400}" />
            <SolidColorBrush x:Key="AccentColorBrush3" Color="{DynamicResource Primary300}" />
            <SolidColorBrush x:Key="AccentColorBrush4" Color="{DynamicResource Primary200}" />
            <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{DynamicResource Primary700}" />
            <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{DynamicResource Primary500Foreground}" />
            <LinearGradientBrush x:Key="ProgressBrush" StartPoint="1.002,0.5" EndPoint="0.001,0.5">
                <GradientStop Offset="0" Color="{DynamicResource Primary700}" />
                <GradientStop Offset="1" Color="{DynamicResource Primary300}" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="CheckmarkFill" Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="RightArrowFill" Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{DynamicResource Primary500Foreground}" />
            <SolidColorBrush x:Key="IdealForegroundDisabledBrush"
                             Opacity="0.4"
                             Color="{DynamicResource Primary500}" />

            <locator:ViewModelLocator x:Key="Locator" />

            <converters:TextFieldHintVisibilityConverter x:Key="TextFieldHintVisibilityConverter" />

            <Style x:Key="SelfMessageMaterialDesignTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
                <Setter Property="BorderThickness" Value="0 0 0 1" />
                <Setter Property="wpf:TextFieldAssist.TextBoxViewMargin" Value="1 0 1 0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush}" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="AllowDrop" Value="true" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border x:Name="border"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="0 4 0 4"
                                        SnapsToDevicePixels="True">
                                    <Grid Margin="{TemplateBinding Padding}">
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                      Focusable="false"
                                                      HorizontalScrollBarVisibility="Hidden"
                                                      VerticalScrollBarVisibility="Hidden" />
                                        <TextBlock x:Name="Hint"
                                                   Margin="1 0 1 0"
                                                   IsHitTestVisible="False"
                                                   Opacity="{Binding Path=(wpf:TextFieldAssist.HintOpacity),
                                                                     RelativeSource={RelativeSource TemplatedParent}}"
                                                   Text="{Binding Path=(wpf:TextFieldAssist.Hint),
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                   Visibility="{TemplateBinding Text,
                                                                                Converter={StaticResource TextFieldHintVisibilityConverter}}" />
                                    </Grid>
                                </Border>
                                <wpf:Underline x:Name="Underline" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Opacity" Value="0.56" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="False">
                                    <Setter TargetName="Underline" Property="IsActive" Value="True" />
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                                    <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                            <Condition Property="IsSelectionActive" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type utils:ImageButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type utils:ImageButton}">
                            <Border Name="Border" BorderThickness="0">
                                <Border.Background>
                                    <ImageBrush AlignmentX="Left"
                                                AlignmentY="Top"
                                                ImageSource="{Binding Path=Image,
                                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                                Stretch="UniformToFill"
                                                Viewbox="0,0,0.25,1" />
                                </Border.Background>
                                <ContentPresenter RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush AlignmentX="Left"
                                                        AlignmentY="Top"
                                                        ImageSource="{Binding Path=Image,
                                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                                        Stretch="UniformToFill"
                                                        Viewbox="0.25,0,0.25,1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush AlignmentX="Left"
                                                        AlignmentY="Top"
                                                        ImageSource="{Binding Path=Image,
                                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                                        Stretch="UniformToFill"
                                                        Viewbox="0.5,0,0.25,1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush AlignmentX="Left"
                                                        AlignmentY="Top"
                                                        ImageSource="{Binding Path=Image,
                                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                                        Stretch="UniformToFill"
                                                        Viewbox="0.75,0,0.25,1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
